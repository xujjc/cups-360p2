name: Build OpenWrt for 360P2 Printer Server

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-22.04
    container:
      image: openwrt/sdk:ramips-mt76x8-22.03.5
      options: --user root

    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        path: openwrt-src

    - name: 查找SDK目录
      id: find-sdk
      run: |
        if [ -d "/builder" ]; then
          echo "SDK_DIR=/builder" >> $GITHUB_ENV
        elif [ -d "/sdk" ]; then
          echo "SDK_DIR=/sdk" >> $GITHUB_ENV
        elif [ -d "/openwrt" ]; then
          echo "SDK_DIR=/openwrt" >> $GITHUB_ENV
        else
          echo "::error::无法找到SDK目录"
          ls -la /
          exit 1
        fi
        echo "SDK_DIR=${{ env.SDK_DIR }}"

    - name: 准备编译环境
      run: |
        cd ${{ env.SDK_DIR }}
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        # 安装打印机相关依赖
        ./scripts/feeds install cups p910nd splix avahi-daemon kmod-usb-printer kmod-usb-ohci kmod-usb2
        ./scripts/feeds install luci luci-i18n-base-zh-cn luci-theme-bootstrap

    - name: 修复配置文件警告
      run: |
        cd ${{ env.SDK_DIR }}
        # 修复choice默认值警告
        find . -type f -name "Config*.in" -o -name "config*.in" | while read file; do
          sed -i '/choice/,/endchoice/{ /default/s/^\s*//; /default/d }' "$file"
          sed -i '/choice/,/endchoice/{ /config.*default/s/ *default.*// }' "$file"
        done
        # 确保终端环境正确
        export TERM=linux

    - name: 配置目标设备
      run: |
        cd ${{ env.SDK_DIR }}
        # 使用适配360P2的配置
        if [ -f "config/ramips/mt76x8/360p2_defconfig" ]; then
          make ramips/mt76x8/360p2_defconfig
        else
          make ramips/mt76x8/hiwifi_hc5661a_defconfig
        fi
        
        # 追加自定义配置（针对16M RAM优化）
        cat >> .config << 'EOF'
# 基础系统配置
CONFIG_TARGET_ROOTFS_SQUASHFS=y
CONFIG_TARGET_ROOTFS_PARTSIZE=14336  # 14MB根文件系统（适合16M RAM）

# 网络功能保留
CONFIG_PACKAGE_ip-full=y
CONFIG_PACKAGE_dhcpd=y
CONFIG_PACKAGE_wpad-basic=y
CONFIG_PACKAGE_iptables-nft=y

# LUCI中文界面
CONFIG_PACKAGE_luci=y
CONFIG_PACKAGE_luci-i18n-base-zh-cn=y
CONFIG_PACKAGE_luci-theme-bootstrap=y

# 打印机服务
CONFIG_PACKAGE_cups=y
CONFIG_PACKAGE_cups-lpd=y
CONFIG_PACKAGE_cups-filters=y
CONFIG_PACKAGE_p910nd=y
CONFIG_PACKAGE_splix=y
CONFIG_PACKAGE_avahi-daemon=y
CONFIG_PACKAGE_kmod-usb-printer=y
CONFIG_PACKAGE_kmod-usb-ohci=y
CONFIG_PACKAGE_kmod-usb2=y

# 优化内存占用（移除非必要组件）
CONFIG_PACKAGE_firewall=n
CONFIG_PACKAGE_dnsmasq=n
CONFIG_PACKAGE_odhcpd=n
CONFIG_PACKAGE_libstdcpp=n
CONFIG_PACKAGE_libgomp=n
EOF
        
        # 生成最终配置
        make defconfig
        rm -f .menuconfig

    - name: 自定义固件设置
      run: |
        cd ${{ env.SDK_DIR }}
        
        # 修改默认IP
        sed -i 's/192.168.1.1/192.168.2.1/g' package/base-files/files/bin/config_generate
        
        # 优化CUPS配置（适合小内存）
        mkdir -p files/etc/cups
        cat > files/etc/cups/cupsd.conf << 'EOF'
Port 631
Listen localhost:631
Browsing On
BrowseLocalProtocols dnssd
DefaultAuthType None
WebInterface Yes
SystemGroup lp
EOF
        
        # 添加打印机服务发现（支持中文名称）
        mkdir -p files/etc/avahi/services
        cat > files/etc/avahi/services/ipp.service << 'EOF'
<?xml version="1.0" standalone='no'?>
<service-group>
  <name replace-wildcards="yes">360P2 打印机</name>
  <service>
    <type>_ipp._tcp</type>
    <subtype>_universal._sub._ipp._tcp</subtype>
    <port>631</port>
  </service>
</service-group>
EOF
        
        # 添加佳能MF4452打印机支持（p910nd配置）
        mkdir -p files/etc/p910nd
        cat > files/etc/p910nd/mf4452.conf << 'EOF'
# 佳能MF4452配置
Model Canon MF4452
Ports usb001
Driver pxlmono
EOF

    - name: 编译固件（优化内存使用）
      run: |
        cd ${{ env.SDK_DIR }}
        export TERM=linux
        
        # 分阶段编译并优化
        make -j$(nproc) download V=s
        make -j$(nproc) tools/install V=s
        make -j$(nproc) toolchain/install V=s
        
        # 编译核心包（先编译必要组件）
        make -j$(nproc) package/base-files/install V=s
        make -j$(nproc) package/luci/install V=s
        make -j$(nproc) package/cups/install V=s
        make -j$(nproc) package/avahi-daemon/install V=s
        
        # 编译完整固件（失败时切换单线程）
        make -j$(nproc) V=s || make -j1 V=s
        
        # 检查固件生成
        if [ -f "bin/ramips/*.sysupgrade.bin" ]; then
          echo "固件生成成功"
          ls -la bin/ramips/*.sysupgrade.bin
          # 检查固件大小（应小于14MB）
          du -sh bin/ramips/*.sysupgrade.bin
        else
          echo "::error::固件未生成"
          ls -la bin/ramips/
          exit 1
        fi

    - name: 上传编译产物
      uses: actions/upload-artifact@v4
      with:
        name: openwrt-360p2-printer
        path: |
          bin/ramips/*.sysupgrade.bin
          bin/ramips/packages/*/cups_*.ipk
          bin/ramips/packages/*/avahi-daemon_*.ipk

    - name: 生成下载链接
      if: success()
      run: |
        echo "固件已生成，可在Artifacts中下载"
