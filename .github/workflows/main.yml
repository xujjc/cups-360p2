name: Build OpenWrt for 360P2 (MT7628)

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-22.04
    container:
      image: openwrt/sdk:ramips-mt76x8-22.03.5
      options: --user root

    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        path: openwrt-src

    - name: 查找SDK目录
      id: find-sdk
      run: |
        if [ -d "/builder" ]; then
          echo "SDK_DIR=/builder" >> $GITHUB_ENV
        elif [ -d "/sdk" ]; then
          echo "SDK_DIR=/sdk" >> $GITHUB_ENV
        elif [ -d "/openwrt" ]; then
          echo "SDK_DIR=/openwrt" >> $GITHUB_ENV
        else
          echo "::error::无法找到SDK目录"
          ls -la /
          exit 1
        fi
        echo "SDK_DIR=${{ env.SDK_DIR }}"

    - name: 准备编译环境
      run: |
        cd ${{ env.SDK_DIR }}
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        # 安装必要组件
        ./scripts/feeds install python3-distutils zlib

    - name: 彻底修复choice默认值警告
      run: |
        cd ${{ env.SDK_DIR }}
        export TERM=linux  # 提前设置终端变量
        
        # 定位配置文件（兼容大小写）
        CONFIG_FILE=$(find . -maxdepth 5 -name "Config-build.in" -o -name "config-build.in")
        if [ -z "$CONFIG_FILE" ]; then
          echo "::error::未找到Config-build.in文件"
          find . -maxdepth 5 -type f | grep -i "config"
          exit 1
        fi
        
        echo "修复文件: $CONFIG_FILE"
        # 移除所有choice块内的default
        sed -i '/choice/,/endchoice/{ /default/s/^\s*//; /default/d }' "$CONFIG_FILE"
        sed -i '/choice/,/endchoice/{ /config.*default/s/ *default.*// }' "$CONFIG_FILE"
        
        # 验证修复
        if grep -i "choice.*default" "$CONFIG_FILE"; then
          echo "::error::仍发现choice默认值，请检查第11807行附近"
          exit 1
        else
          echo "✓ choice默认值修复完成"
        fi

    - name: 配置目标设备（非交互式）
      run: |
        cd ${{ env.SDK_DIR }}
        export TERM=linux  # 确保终端变量生效
        
        # 直接使用defconfig，避免触发menuconfig
        if [ -f "config/ramips/mt76x8/360p2_defconfig" ]; then
          make ramips/mt76x8/360p2_defconfig
        else
          make ramips/mt76x8/hiwifi_hc5661a_defconfig
        fi
        
        # 追加自定义配置（保留你的设置）
        cat >> .config << 'EOF'
        CONFIG_TARGET_ROOTFS_SQUASHFS=y
        CONFIG_PACKAGE_luci=y
        CONFIG_PACKAGE_luci-theme-bootstrap=y
        CONFIG_PACKAGE_luci-i18n-base-zh-cn=y  # 中文支持
        CONFIG_PACKAGE_wpad-basic=y
        CONFIG_PACKAGE_iptables-nft=y
        CONFIG_PACKAGE_cups=y
        CONFIG_PACKAGE_avahi-daemon=y
        CONFIG_PACKAGE_splix=y
        CONFIG_PACKAGE_p910nd=y
        CONFIG_PACKAGE_kmod-usb-printer=y
        CONFIG_PACKAGE_kmod-usb-ohci=y
        CONFIG_PACKAGE_kmod-usb2=y
        CONFIG_PACKAGE_firewall=n
        CONFIG_PACKAGE_dnsmasq=n
        CONFIG_PACKAGE_odhcpd=n
        EOF
        
        # 生成最终配置
        make defconfig
        rm -f .menuconfig .config.old

    - name: 自定义固件设置
      run: |
        cd ${{ env.SDK_DIR }}
        export TERM=linux
        
        # 修改默认IP
        sed -i 's/192.168.1.1/192.168.2.1/g' package/base-files/files/bin/config_generate
        
        # 添加打印机服务发现（中文名称）
        mkdir -p files/etc/avahi/services
        cat > files/etc/avahi/services/ipp.service << 'EOF'
        <?xml version="1.0" standalone='no'?>
        <service-group>
          <name replace-wildcards="yes">360P2 打印机</name>
          <service>
            <type>_ipp._tcp</type>
            <subtype>_universal._sub._ipp._tcp</subtype>
            <port>631</port>
          </service>
        </service-group>
        EOF

    - name: 编译固件（带详细日志）
      run: |
        cd ${{ env.SDK_DIR }}
        export TERM=linux  # 关键：确保终端变量在编译时生效
        
        echo "开始编译（禁用交互式界面）..."
        make -j$(nproc) download V=s
        make -j$(nproc) tools/install V=s
        make -j$(nproc) toolchain/install V=s
        make -j$(nproc) package/compile V=s
        make -j$(nproc) package/index V=s
        make -j$(nproc) V=s || make -j1 V=s  # 失败时单线程编译
        
        # 检查固件生成
        if [ -f "bin/ramips/*.sysupgrade.bin" ]; then
          echo "固件生成成功"
          ls -la bin/ramips/*.sysupgrade.bin
        else
          echo "::error::固件未生成"
          ls -la bin/ramips/
          exit 1
        fi

    - name: 上传编译产物
      uses: actions/upload-artifact@v4
      with:
        name: openwrt-360p2-firmware
        path: bin/ramips/*.sysupgrade.bin
